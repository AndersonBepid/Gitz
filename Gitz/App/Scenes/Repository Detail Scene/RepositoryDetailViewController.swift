//
//  RepositoryDetailViewController.swift
//  Gitz
//
//  Created by Anderson Oliveira on 29/10/18.
//  Copyright (c) 2018 Anderson Oliveira. All rights reserved.
//
//  This file was generated by the Clean Swift HELM Xcode Templates
//  https://github.com/HelmMobile/clean-swift-templates

import UIKit

protocol RepositoryDetailViewControllerInput {
    func displaySelectedRepository(viewModel: RepositoryDetailScene.SelectedRepository.ViewModel)
}

protocol RepositoryDetailViewControllerOutput {
    func selectedRepository(request: RepositoryDetailScene.SelectedRepository.Request)
}

class RepositoryDetailViewController: UIViewController, RepositoryDetailViewControllerInput {

    // MARK: IBOutlets

    @IBOutlet weak var headerView: UIView!
    @IBOutlet weak var profileView: UIView!
    @IBOutlet weak var profileImageView: UIImageView!
    @IBOutlet weak var usernameLabel: UILabel!
    @IBOutlet weak var typeLabel: UILabel!
    @IBOutlet weak var repositoryNameLabel: UILabel!
    @IBOutlet weak var watchersLabel: UILabel!
    @IBOutlet weak var stargazersLabel: UILabel!
    @IBOutlet weak var forksLabel: UILabel!
    @IBOutlet weak var descriptionLabel: UILabel!
    @IBOutlet weak var descriptionScrollView: UIScrollView!
    
    
    // MARK: Properties

    var output: RepositoryDetailViewControllerOutput?
    var router: RepositoryDetailRouter?
    
    // MARK: Object lifecycle
    
    override func awakeFromNib() {
        super.awakeFromNib()
        RepositoryDetailConfigurator.sharedInstance.configure(viewController: self)
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        setupStyle()
        selectedRepository()
        setupScroll()
    }

    // MARK: Requests

    func selectedRepository() {
        let request = RepositoryDetailScene.SelectedRepository.Request()
        output?.selectedRepository(request: request)
    }

    // MARK: Display logic

    func displaySelectedRepository(viewModel: RepositoryDetailScene.SelectedRepository.ViewModel) {
        profileImageView.loadImageUsingCache(withUrlString: viewModel.imageUrl, defaultImage: #imageLiteral(resourceName: "github"), loadingActivityIndicatorStyle: .white)
        usernameLabel.text = viewModel.usermane
        typeLabel.text = viewModel.type
        repositoryNameLabel.text = viewModel.repositoryName
        watchersLabel.text = viewModel.watchers
        stargazersLabel.text = viewModel.stargazers
        forksLabel.text = viewModel.forks
        descriptionLabel.text = viewModel.description
        print(viewModel.since)
    }
}

// MARK: IBActions

extension RepositoryDetailViewController {
    
    @IBAction func tapBack(_ sender: UIButton) {
        dismiss(animated: true, completion: nil)
    }
}

// MARK: Setup Style

extension RepositoryDetailViewController {

    private func setupStyle() {
        profileImageView.layer.cornerRadius = profileImageView.frame.height / 2.0
        profileView.dropShadow(radius: 8.0)
        headerView.dropShadow(opacity: 3.0, radius: 8.0)
        headerView.layer.cornerRadius = 20.0
        headerView.layer.maskedCorners = [.layerMinXMaxYCorner, .layerMaxXMaxYCorner]
    }
}

extension RepositoryDetailViewController: UIScrollViewDelegate {

    private func setupScroll() {
        let boundsView = UIScreen.main.bounds

        descriptionScrollView.contentSize = CGSize(width: boundsView.width, height: 30.0)
        descriptionScrollView.delegate = self
    }
}

//This should be on configurator but for some reason storyboard doesn't detect ViewController's name if placed there
extension RepositoryDetailViewController: RepositoryDetailPresenterOutput {
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        router?.passDataToNextScene(for: segue)
    }
}
