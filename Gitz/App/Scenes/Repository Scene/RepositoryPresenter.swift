//
//  RepositoryPresenter.swift
//  Gitz
//
//  Created by Anderson Oliveira on 28/10/18.
//  Copyright (c) 2018 Anderson Oliveira. All rights reserved.
//
//  This file was generated by the Clean Swift HELM Xcode Templates
//  https://github.com/HelmMobile/clean-swift-templates

protocol RepositoryPresenterInput {
    func presentSearchResult(response: RepositoryScene.SearchRepository.Response)
}

protocol RepositoryPresenterOutput: class {
    func displaySearchResult(viewModel: RepositoryScene.SearchRepository.ViewModel)
}

class RepositoryPresenter: RepositoryPresenterInput {
    
    weak var output: RepositoryPresenterOutput?
    
    // MARK: Presentation logic

    func presentSearchResult(response: RepositoryScene.SearchRepository.Response) {
        let viewModel: RepositoryScene.SearchRepository.ViewModel!
        switch response.result {
        case .success(let repositories):
            viewModel = RepositoryScene.SearchRepository.ViewModel(state: .success(searchResults: repositories))
        case .failure(let error):
            viewModel = RepositoryScene.SearchRepository.ViewModel(state: .failure(errorMessage: error.localizedDescription))
        }
        output?.displaySearchResult(viewModel: viewModel)
    }
}
